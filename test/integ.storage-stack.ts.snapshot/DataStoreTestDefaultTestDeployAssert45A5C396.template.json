{
 "Resources": {
  "LambdaInvoke8fb68ef8ac49c416538bc6533dba9406": {
   "Type": "Custom::DeployAssert@SdkCallLambdainvoke",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "SingletonFunction1488541a7b23466481b69b4408076b81HandlerCD40AE9F",
      "Arn"
     ]
    },
    "service": "Lambda",
    "api": "invoke",
    "parameters": {
     "FunctionName": {
      "Fn::Join": [
       "",
       [
        "\"",
        {
         "Fn::ImportValue": "IntegrationTestStorageStack:ExportsOutputRefcrawlerBDCA03E57222E12F"
        },
        "\""
       ]
      ]
     },
     "RetentionDays": "7"
    },
    "flattenResponse": "false",
    "salt": "1716727589064"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "LambdaInvoke8fb68ef8ac49c416538bc6533dba9406InvokeECF28230": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::ImportValue": "IntegrationTestStorageStack:ExportsOutputRefcrawlerBDCA03E57222E12F"
    },
    "Principal": {
     "Fn::GetAtt": [
      "SingletonFunction1488541a7b23466481b69b4408076b81Role37ABCE73",
      "Arn"
     ]
    }
   }
  },
  "SingletonFunction1488541a7b23466481b69b4408076b81Role37ABCE73": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Action": [
          "lambda:Invoke"
         ],
         "Effect": "Allow",
         "Resource": [
          "*"
         ]
        },
        {
         "Action": [
          "lambda:InvokeFunction"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":lambda:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":function:",
             {
              "Fn::ImportValue": "IntegrationTestStorageStack:ExportsOutputRefcrawlerBDCA03E57222E12F"
             }
            ]
           ]
          }
         ]
        },
        {
         "Action": [
          "dynamodb:Query"
         ],
         "Effect": "Allow",
         "Resource": [
          "*"
         ]
        },
        {
         "Action": [
          "states:StartExecution"
         ],
         "Effect": "Allow",
         "Resource": [
          "*"
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "SingletonFunction1488541a7b23466481b69b4408076b81LogGroupB3CD1BAA": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/lambda/SingletonFunction1488541a7b23466481b69b4408076b81",
    "RetentionInDays": 7
   }
  },
  "SingletonFunction1488541a7b23466481b69b4408076b81HandlerCD40AE9F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Runtime": "nodejs18.x",
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "65c9f57ca55e2d458059a930e997f2bc96560b3a3654cc442616d12089449d39.zip"
    },
    "Timeout": 120,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "SingletonFunction1488541a7b23466481b69b4408076b81Role37ABCE73",
      "Arn"
     ]
    },
    "LoggingConfig": {
     "LogGroup": {
      "Ref": "SingletonFunction1488541a7b23466481b69b4408076b81LogGroupB3CD1BAA"
     }
    }
   }
  },
  "AwsApiCallDynamoDBQuery1a7b5a1f5e72e98ac1a23db681defb18": {
   "Type": "Custom::DeployAssert@SdkCallDynamoDBQuery",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "SingletonFunction1488541a7b23466481b69b4408076b81HandlerCD40AE9F",
      "Arn"
     ]
    },
    "service": "DynamoDB",
    "api": "Query",
    "expected": "{\"$ObjectLike\":{\"Count\":1}}",
    "stateMachineArn": {
     "Ref": "AwsApiCallDynamoDBQuery1a7b5a1f5e72e98ac1a23db681defb18WaitFor6D3B1328"
    },
    "parameters": {
     "ExpressionAttributeValues": "{\":station\":{\"S\":\"kenilworth\"}}",
     "KeyConditionExpression": "\"station = :station\"",
     "Limit": "1",
     "ScanIndexForward": "false",
     "TableName": {
      "Fn::Join": [
       "",
       [
        "\"",
        {
         "Fn::ImportValue": "IntegrationTestStorageStack:ExportsOutputRefriverlevels918EE9F8AA4B25C1"
        },
        "\""
       ]
      ]
     }
    },
    "flattenResponse": "false",
    "salt": "1716727589064"
   },
   "DependsOn": [
    "LambdaInvoke8fb68ef8ac49c416538bc6533dba9406",
    "LambdaInvoke8fb68ef8ac49c416538bc6533dba9406InvokeECF28230"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AwsApiCallDynamoDBQuery1a7b5a1f5e72e98ac1a23db681defb18WaitForIsCompleteProviderInvoke2D3DEDB4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SingletonFunction76b3e830a873425f8453eddd85c86925Handler81461ECE",
      "Arn"
     ]
    },
    "Principal": {
     "Fn::GetAtt": [
      "AwsApiCallDynamoDBQuery1a7b5a1f5e72e98ac1a23db681defb18WaitForRole0A96B5C8",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LambdaInvoke8fb68ef8ac49c416538bc6533dba9406",
    "LambdaInvoke8fb68ef8ac49c416538bc6533dba9406InvokeECF28230"
   ]
  },
  "AwsApiCallDynamoDBQuery1a7b5a1f5e72e98ac1a23db681defb18WaitForTimeoutProviderInvoke1A22BBE4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41aHandlerADF3E6EA",
      "Arn"
     ]
    },
    "Principal": {
     "Fn::GetAtt": [
      "AwsApiCallDynamoDBQuery1a7b5a1f5e72e98ac1a23db681defb18WaitForRole0A96B5C8",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LambdaInvoke8fb68ef8ac49c416538bc6533dba9406",
    "LambdaInvoke8fb68ef8ac49c416538bc6533dba9406InvokeECF28230"
   ]
  },
  "AwsApiCallDynamoDBQuery1a7b5a1f5e72e98ac1a23db681defb18WaitForRole0A96B5C8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ]
    },
    "Policies": [
     {
      "PolicyName": "InlineInvokeFunctions",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Action": "lambda:InvokeFunction",
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::GetAtt": [
            "SingletonFunction76b3e830a873425f8453eddd85c86925Handler81461ECE",
            "Arn"
           ]
          },
          {
           "Fn::GetAtt": [
            "SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41aHandlerADF3E6EA",
            "Arn"
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "DependsOn": [
    "LambdaInvoke8fb68ef8ac49c416538bc6533dba9406",
    "LambdaInvoke8fb68ef8ac49c416538bc6533dba9406InvokeECF28230"
   ]
  },
  "AwsApiCallDynamoDBQuery1a7b5a1f5e72e98ac1a23db681defb18WaitFor6D3B1328": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"framework-isComplete-task\",\"States\":{\"framework-isComplete-task\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":15,\"MaxAttempts\":2,\"BackoffRate\":3}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"framework-onTimeout-task\"}],\"Type\":\"Task\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "SingletonFunction76b3e830a873425f8453eddd85c86925Handler81461ECE",
         "Arn"
        ]
       },
       "\"},\"framework-onTimeout-task\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41aHandlerADF3E6EA",
         "Arn"
        ]
       },
       "\"}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "AwsApiCallDynamoDBQuery1a7b5a1f5e72e98ac1a23db681defb18WaitForRole0A96B5C8",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "AwsApiCallDynamoDBQuery1a7b5a1f5e72e98ac1a23db681defb18WaitForRole0A96B5C8",
    "LambdaInvoke8fb68ef8ac49c416538bc6533dba9406",
    "LambdaInvoke8fb68ef8ac49c416538bc6533dba9406InvokeECF28230"
   ]
  },
  "SingletonFunction76b3e830a873425f8453eddd85c86925Role918961BB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Action": [
          "dynamodb:Query"
         ],
         "Effect": "Allow",
         "Resource": [
          "*"
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "SingletonFunction76b3e830a873425f8453eddd85c86925Handler81461ECE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Runtime": "nodejs18.x",
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "65c9f57ca55e2d458059a930e997f2bc96560b3a3654cc442616d12089449d39.zip"
    },
    "Timeout": 120,
    "Handler": "index.isComplete",
    "Role": {
     "Fn::GetAtt": [
      "SingletonFunction76b3e830a873425f8453eddd85c86925Role918961BB",
      "Arn"
     ]
    }
   }
  },
  "SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41aRoleB84BD8CE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   }
  },
  "SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41aHandlerADF3E6EA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Runtime": "nodejs18.x",
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "65c9f57ca55e2d458059a930e997f2bc96560b3a3654cc442616d12089449d39.zip"
    },
    "Timeout": 120,
    "Handler": "index.onTimeout",
    "Role": {
     "Fn::GetAtt": [
      "SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41aRoleB84BD8CE",
      "Arn"
     ]
    }
   }
  }
 },
 "Outputs": {
  "AssertionResultsAwsApiCallDynamoDBQuery1a7b5a1f5e72e98ac1a23db681defb18": {
   "Value": {
    "Fn::GetAtt": [
     "AwsApiCallDynamoDBQuery1a7b5a1f5e72e98ac1a23db681defb18",
     "assertion"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}