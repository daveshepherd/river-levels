{
 "Metadata": {
  "cdk_nag": {
   "rules_to_suppress": [
    {
     "reason": "it is acceptable to use build in iam policies for basic lambda runtime",
     "id": "AwsSolutions-IAM4"
    }
   ]
  }
 },
 "Resources": {
  "riverlevels918EE9F8": {
   "Type": "AWS::DynamoDB::GlobalTable",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "station",
      "AttributeType": "S"
     },
     {
      "AttributeName": "timestamp",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "station",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "timestamp",
      "KeyType": "RANGE"
     }
    ],
    "Replicas": [
     {
      "DeletionProtectionEnabled": false,
      "Region": {
       "Ref": "AWS::Region"
      }
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "riverlevelscrawler614EF680": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "The service role for running the river levels crawler lambda",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSXRayDaemonWriteAccess"
       ]
      ]
     },
     {
      "Ref": "Policy23B91518"
     }
    ],
    "Path": "/service-role/"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "Policy23B91518": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "Description": "Grant access to the river levels table",
    "Path": "/service-policy/",
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "riverlevels918EE9F8",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "crawlerBDCA03E5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "91eb1d193300dca35859f1fb95ed8f506fb37aab2bb4f05156b65a3fd0ffc801.zip"
    },
    "Description": "src/crawler.lambda.ts",
    "Environment": {
     "Variables": {
      "DYNAMODB_READINGS_TABLE": {
       "Ref": "riverlevels918EE9F8"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "riverlevelscrawler614EF680",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 60
   },
   "DependsOn": [
    "riverlevelscrawler614EF680"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  }
 },
 "Outputs": {
  "RiverLevelsTable": {
   "Value": {
    "Fn::GetAtt": [
     "riverlevels918EE9F8",
     "Arn"
    ]
   }
  },
  "ExportsOutputRefcrawlerBDCA03E57222E12F": {
   "Value": {
    "Ref": "crawlerBDCA03E5"
   },
   "Export": {
    "Name": "IntegrationTestStorageStack:ExportsOutputRefcrawlerBDCA03E57222E12F"
   }
  },
  "ExportsOutputRefriverlevels918EE9F8AA4B25C1": {
   "Value": {
    "Ref": "riverlevels918EE9F8"
   },
   "Export": {
    "Name": "IntegrationTestStorageStack:ExportsOutputRefriverlevels918EE9F8AA4B25C1"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}