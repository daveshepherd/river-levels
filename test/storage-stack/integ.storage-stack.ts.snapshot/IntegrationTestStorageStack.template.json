{
 "Metadata": {
  "cdk_nag": {
   "rules_to_suppress": [
    {
     "reason": "it is acceptable to use build in iam policies for basic lambda runtime",
     "id": "AwsSolutions-IAM4",
     "applies_to": [
      "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
      "Policy::arn:<AWS::Partition>:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
     ]
    },
    {
     "reason": "the lambda tracing option creates a wildcard policy",
     "id": "AwsSolutions-IAM5",
     "applies_to": [
      "Resource::*"
     ]
    }
   ]
  }
 },
 "Resources": {
  "riverlevelstableA1F25F33": {
   "Type": "AWS::DynamoDB::GlobalTable",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "station",
      "AttributeType": "S"
     },
     {
      "AttributeName": "timestamp",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "station",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "timestamp",
      "KeyType": "RANGE"
     }
    ],
    "Replicas": [
     {
      "DeletionProtectionEnabled": false,
      "PointInTimeRecoverySpecification": {
       "PointInTimeRecoveryEnabled": true,
       "RecoveryPeriodInDays": 35
      },
      "Region": {
       "Ref": "AWS::Region"
      },
      "Tags": [
       {
        "Key": "endor:ManagedBy",
        "Value": "cdk"
       },
       {
        "Key": "endor:Stage",
        "Value": "development"
       }
      ]
     }
    ],
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "crawlerrole985C99ED": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "The service role for running the river levels crawler lambda",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Ref": "crawlerrolecrawlerpolicy8AFFD705"
     }
    ],
    "Path": "/service-role/",
    "Tags": [
     {
      "Key": "endor:ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "endor:Stage",
      "Value": "development"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "crawlerrolecrawlerpolicy8AFFD705": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "Description": "Grant access to the river levels table",
    "Path": "/service-policy/",
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "riverlevelstableA1F25F33",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "crawlerloggroup6A20A1A3": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 365,
    "Tags": [
     {
      "Key": "endor:ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "endor:Stage",
      "Value": "development"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "crawlerlambda65FC80E0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "59da20884a00f475bae00e2ac1fba2fc63b4464ab0d2f1a2bcb9e0cd077db341.zip"
    },
    "Description": "src/storage-stack/crawler.lambda.ts",
    "Environment": {
     "Variables": {
      "DYNAMODB_READINGS_TABLE": {
       "Ref": "riverlevelstableA1F25F33"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension-Arm64:19"
       ]
      ]
     }
    ],
    "LoggingConfig": {
     "LogGroup": {
      "Ref": "crawlerloggroup6A20A1A3"
     }
    },
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "crawlerrole985C99ED",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Tags": [
     {
      "Key": "endor:ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "endor:Stage",
      "Value": "development"
     }
    ],
    "Timeout": 60,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "crawlerrolecrawlerpolicy8AFFD705",
    "crawlerrole985C99ED"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "crawlerlambdainlinePolicyAddedToExecutionRole0ED894F46": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "crawlerlambdainlinePolicyAddedToExecutionRole0ED894F46",
    "Roles": [
     {
      "Ref": "crawlerrole985C99ED"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "crawlercronD1309D29": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(10 minutes)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "crawlerlambda65FC80E0",
        "Arn"
       ]
      },
      "Id": "Target0",
      "RetryPolicy": {
       "MaximumRetryAttempts": 3
      }
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "crawlercronAllowEventRuleIntegrationTestStorageStackcrawlerlambda8647373F5E009610": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "crawlerlambda65FC80E0",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "crawlercronD1309D29",
      "Arn"
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "riverlevelsnotificationsACDAE605": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "DisplayName": "river-levels-notifications",
    "KmsMasterKeyId": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":kms:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":alias/aws/sns"
      ]
     ]
    },
    "Tags": [
     {
      "Key": "endor:ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "endor:Stage",
      "Value": "development"
     }
    ],
    "TracingConfig": "Active"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "riverlevelsnotificationsPolicyA8C529BB": {
   "Type": "AWS::SNS::TopicPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sns:Publish",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": "*",
       "Resource": {
        "Ref": "riverlevelsnotificationsACDAE605"
       },
       "Sid": "AllowPublishThroughSSLOnly"
      }
     ],
     "Version": "2012-10-17"
    },
    "Topics": [
     {
      "Ref": "riverlevelsnotificationsACDAE605"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "snspublishergroup0F35AF53": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 365,
    "Tags": [
     {
      "Key": "endor:ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "endor:Stage",
      "Value": "development"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "snspublisherrole00E553A8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "The service role for running the river levels sns publisher lambda",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Ref": "snspublisherroledynamodbpolicy804FBAEB"
     },
     {
      "Ref": "snspublisherrolesnspolicy6B97BC97"
     }
    ],
    "Path": "/service-role/",
    "Tags": [
     {
      "Key": "endor:ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "endor:Stage",
      "Value": "development"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "snspublisherroledynamodbpolicy804FBAEB": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "Description": "Grant access to the river levels table",
    "Path": "/service-policy/",
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:DescribeStream",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:ListStreams"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "riverlevelstableA1F25F33",
         "StreamArn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "snspublisherrolesnspolicy6B97BC97": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "Description": "Grant access to publish to the SNS topic",
    "Path": "/service-policy/",
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": {
        "Ref": "riverlevelsnotificationsACDAE605"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "snspublisherroleDefaultPolicyE5B88FFE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:DescribeStream",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:ListStreams"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "riverlevelstableA1F25F33",
         "StreamArn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "snspublisherroleDefaultPolicyE5B88FFE",
    "Roles": [
     {
      "Ref": "snspublisherrole00E553A8"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "snspublisherlambda35C1A2D1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "cfeba0f013534c3b34d9feb00b7d483905ae8dca68b7457ed29db8a571dd8193.zip"
    },
    "Description": "src/storage-stack/sns-publisher.lambda.ts",
    "Environment": {
     "Variables": {
      "SNS_TOPIC_ARN": {
       "Ref": "riverlevelsnotificationsACDAE605"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension-Arm64:19"
       ]
      ]
     }
    ],
    "LoggingConfig": {
     "LogGroup": {
      "Ref": "snspublishergroup0F35AF53"
     }
    },
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "snspublisherrole00E553A8",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Tags": [
     {
      "Key": "endor:ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "endor:Stage",
      "Value": "development"
     }
    ],
    "Timeout": 30,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "snspublisherroleDefaultPolicyE5B88FFE",
    "snspublisherroledynamodbpolicy804FBAEB",
    "snspublisherrole00E553A8",
    "snspublisherrolesnspolicy6B97BC97"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "snspublisherlambdainlinePolicyAddedToExecutionRole0790DF1FF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "snspublisherlambdainlinePolicyAddedToExecutionRole0790DF1FF",
    "Roles": [
     {
      "Ref": "snspublisherrole00E553A8"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "snspublisherlambdaDynamoDBEventSourceIntegrationTestStorageStackriverlevelstableA4CFEE911A99E01F": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 100,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "riverlevelstableA1F25F33",
      "StreamArn"
     ]
    },
    "FunctionName": {
     "Ref": "snspublisherlambda35C1A2D1"
    },
    "StartingPosition": "LATEST",
    "Tags": [
     {
      "Key": "endor:ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "endor:Stage",
      "Value": "development"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "testdlqE3F3EA6D": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "Tags": [
     {
      "Key": "endor:ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "endor:Stage",
      "Value": "development"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "testdlqPolicy5921D4DA": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::GetAtt": [
         "testdlqE3F3EA6D",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "testdlqE3F3EA6D"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "testqueueA58C838B": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "testdlqE3F3EA6D",
       "Arn"
      ]
     },
     "maxReceiveCount": 5
    },
    "Tags": [
     {
      "Key": "endor:ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "endor:Stage",
      "Value": "development"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "testqueuePolicyB9530952": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::GetAtt": [
         "testqueueA58C838B",
         "Arn"
        ]
       }
      },
      {
       "Action": "sqs:SendMessage",
       "Condition": {
        "ArnEquals": {
         "aws:SourceArn": {
          "Ref": "riverlevelsnotificationsACDAE605"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "sns.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "testqueueA58C838B",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "testqueueA58C838B"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "testqueueIntegrationTestStorageStackriverlevelsnotifications526AEA1ED13E6843": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "testqueueA58C838B",
      "Arn"
     ]
    },
    "Protocol": "sqs",
    "TopicArn": {
     "Ref": "riverlevelsnotificationsACDAE605"
    }
   },
   "DependsOn": [
    "testqueuePolicyB9530952"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  }
 },
 "Outputs": {
  "RiverLevelsTable": {
   "Value": {
    "Fn::GetAtt": [
     "riverlevelstableA1F25F33",
     "Arn"
    ]
   }
  },
  "ExportsOutputRefcrawlerlambda65FC80E0E20F2ED2": {
   "Value": {
    "Ref": "crawlerlambda65FC80E0"
   },
   "Export": {
    "Name": "IntegrationTestStorageStack:ExportsOutputRefcrawlerlambda65FC80E0E20F2ED2"
   }
  },
  "ExportsOutputRefriverlevelstableA1F25F33A0433BB0": {
   "Value": {
    "Ref": "riverlevelstableA1F25F33"
   },
   "Export": {
    "Name": "IntegrationTestStorageStack:ExportsOutputRefriverlevelstableA1F25F33A0433BB0"
   }
  },
  "ExportsOutputReftestqueueA58C838B800488D5": {
   "Value": {
    "Ref": "testqueueA58C838B"
   },
   "Export": {
    "Name": "IntegrationTestStorageStack:ExportsOutputReftestqueueA58C838B800488D5"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}